<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: api | Shivam Daryanani's Blog]]></title>
  <link href="http://shivamd.github.io/blog/categories/api/atom.xml" rel="self"/>
  <link href="http://shivamd.github.io/"/>
  <updated>2013-11-04T00:37:53+04:00</updated>
  <id>http://shivamd.github.io/</id>
  <author>
    <name><![CDATA[Shivam Daryanani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Facebook Realtime Updates in a Rails Application]]></title>
    <link href="http://shivamd.github.io/blog/2013/11/03/facebook-realtime-updates/"/>
    <updated>2013-11-03T00:01:00+04:00</updated>
    <id>http://shivamd.github.io/blog/2013/11/03/facebook-realtime-updates</id>
    <content type="html"><![CDATA[<p>Since Facebook has rolled out realtime updates it has been easier to gather information. Instead of hitting the API on a set time interval, we can just wait for Facebook to ping us and go grab the information we need. This all sounds good in theory but as I had to integrate realtime updates for an application I am working on, there were quite a few pitfalls and I wish I knew some of these before hand.</p>

<h3>Setting up a Facebook application</h3>

<p>I am not going to walk you through creating a Facebook application, <a href="http://railscasts.com/episodes/360-facebook-authentication?view=asciicast">Ryan Bates</a> already does a good job with it. Once you have that setup and the permissions you need for this application head over to your <a href="https://developers.facebook.com/apps">Facebook applications</a> dashboard. Over here select the application in which you would like to enable realtime updates and hit the edit button on the top right. This should take you to a page with the basic information of your application, and on the right under settings there should be &lsquo;realtime updates&rsquo;.</p>

<p><img class="center" src="/images/realtime_settings.png"></p>

<p>As you can see I have a user object and the fields I want to follow. I have selected all the fields for the demo. You should only select the fields your app has permissions for, otherwise it would be pointless as you won&rsquo;t be able to get the information.
For the callback URL you should point it to the route of the realtime action, but you must be thinking how will I test this locally? That&rsquo;s where <a href="https://ngrok.com/">Ngrok</a> comes in. Ngrok creates a tunnel from the public internet to a port on your local machine. This is perfect for a situation like this where Facebook has to verify that you are authorized.
The information on the site is self explanatory, once installed have it listen to the same port as your server.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rails s -p 3000&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;on a different Terminal window&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;path/to/ngrok 3000
</span></code></pre></td></tr></table></div></figure></notextile></div>
Ngrok will give you a URL which you can paste in to the callback section followed by the route to the realtime action. For the verify token any random string will do.</p>

<h3>Setting up the controller</h3>

<p>Now create a facebook controller with the real_time method.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/controllers/facebook_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>   <span class="k">def</span> <span class="nf">real_time</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;if request.method == &quot;GET&quot;</span>
</span><span class='line'><span class="sr">  if params[&#39;hub.mode&#39;] ==&#39;subscribe&#39; &amp;amp;&amp;amp; params[&#39;hub.verify_token&#39;] ==&#39;stringToken&#39;</span>
</span><span class='line'><span class="sr">    render :text =&amp;gt; params[&#39;hub.challenge&#39;]</span>
</span><span class='line'><span class="sr">  else</span>
</span><span class='line'><span class="sr">    render :text =&amp;gt; &#39;Failed to authorize facebook challenge request&#39;</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'><span class="sr">elsif request.method == &quot;POST&quot;</span>
</span><span class='line'><span class="sr">  #do stuff with information </span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And the routes should look like this:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;namespace :facebook do</span>
</span><span class='line'><span class="sr">  match &quot;/</span><span class="n">real_time</span><span class="s2">&quot;, :action =&amp;gt; :real_time, :as =&amp;gt; &#39;facebook_subscription&#39;, :via =&amp;gt; [:get,:post]</span>
</span><span class='line'><span class="s2">end</span>
</span><span class='line'><span class="s2">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now that we have the route set up for both GET&amp;POST, when we click on test on the realtime updates page Facebook will make a get request to this route ensuring we are authorized. The default hub.mode set by Facebook is subscribe and you must make sure that the verify_token matches what you have entered on Facebook. If all went well Facebook will prompt you with the following message:</p>

<p><img class="center" src="/images/realtime_success.png"></p>

<h3>And we are done&hellip;not really.</h3>

<p>Your application is running, realtime updates are setup and you have a test account to play around with. On every change the user makes to the field you have subscribed to, Facebook will ping your servers. However it will only do so with the Facebook ID, the fields that have changed and a timestamp. This means that we still have to query the API and this can be quite a pain when it comes to things like comments or photos. The good thing is I have banged my head on this for the past week and should be able to alleviate a lot of your troubles.</p>

<p>Facebook example response for relationship change:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">relationship_status</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">facebook</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">relationship_status</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Now in order to actually grab the change we have to make a call to the Facebook API requesting this information. You will only be able to get this information if you have the right permissions.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1">#you&amp;rsquo;ll need the HTTParty gem</span>
</span><span class='line'>  <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/#&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="c1">#&lt;/a&gt;{uid}?fields=relationship_status&amp;amp;access_token=&amp;rdquo; + auth_token)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
This gives the information for the relationship status. This seems and is straight forward and these are the building pieces for every change. However there are some caveats. Below are snippets in order to get events,friends,posts,photos&amp;comments.</p>

<h3>Events</h3>

<p>Facebook example response for events change:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">events</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">facebook</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">events</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And the query to get all event ID&rsquo;s and the respective information:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1">#where token is the user&amp;rsquo;s auth token</span>
</span><span class='line'>  <span class="n">event_ids</span> <span class="o">=</span> <span class="ss">FbGraph</span><span class="p">:</span><span class="ss">:Query</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">SELECT</span> <span class="n">eid</span><span class="p">,</span> <span class="n">rsvp_status</span> <span class="no">FROM</span> <span class="n">event_member</span> <span class="no">WHERE</span> <span class="n">uid</span> <span class="o">=</span> <span class="c1">#{uid}&amp;rdquo;).fetch(access_token: token)</span>
</span><span class='line'>  <span class="n">event_ids</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">event_id</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;event_info = FbGraph::Query.new(&quot;SELECT creator, eid, all_members_count, attending_count, not_replied_count, declined_count, unsure_count, privacy, host, location, name, description, venue, pic, start_time, end_time FROM event WHERE eid=</span><span class="si">#{</span><span class="n">event_id</span><span class="o">[</span><span class="s1">&#39;eid&#39;</span><span class="o">]</span><span class="si">}</span><span class="sr">&quot;).fetch(access_token: token)</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Friends</h3>

<p>Facebook example response for friends change:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">friends</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">facebook</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">friends</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And the query to get all friend&rsquo;s related information:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;token is the user&amp;rsquo;s auth token&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">friends</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/&lt;</span><span class="sr">/a&gt;&amp;rdquo; + uid + &amp;ldquo;/</span><span class="n">friends?access_token</span><span class="o">=&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="n">token</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">fields</span><span class="o">=</span><span class="n">birthday</span><span class="p">,</span><span class="n">age_range</span><span class="p">,</span><span class="n">gender</span><span class="p">,</span><span class="n">first_name</span><span class="p">,</span><span class="n">last_name</span><span class="p">,</span><span class="nb">name</span><span class="p">,</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">.</span><span class="n">parsed_response</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">data</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span>
</span><span class='line'><span class="n">friends</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">friend</span><span class="o">|</span>
</span><span class='line'>  <span class="n">friend_data</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/&lt;</span><span class="sr">/a&gt;&amp;rdquo; + friend[&amp;ldquo;id&amp;rdquo;] + &amp;ldquo;?access_token=&amp;rdquo; + token + &amp;ldquo;&amp;amp;fields=about,age_range,birthday,link,bio,events,gender,interested_in,location,name,relationship_status,significant_other,first_name,interested_in,last_name,locale,location,username,family,likes,locations,movies,picture,photos,posts,security_settings&amp;rdquo;).parsed_response</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Posts,Photos&amp;Comments</h3>

<p>Now this is where things start to get complicated. As you can see Facebook sends &lsquo;feed&rsquo; as a changed field with every column.With every change to anything on Facebook it needs to update the feed and in order to get the photos,posts and comments we must query the feed or stream in the Facebook Query Language. Despite being able to get posts on the &lsquo;status&rsquo; changed field and photos on the &lsquo;photos&rsquo; changed field, I found it best to look for the feed change and make a query.</p>

<p>One great thing with the Facebook Query Language is that you can add conditions to your queries.When making a query after a realtime update, you can put a conditional for updated time to be just before the timestamp given by Facebook.That&rsquo;s what I thought too, but after a lot of digging Facebook doesn&rsquo;t give you the right information. The only way around this is to get all the posts, sort them by updated time and then use ruby&rsquo;s built in methods to select the posts before a certain time.</p>

<p>Facebook example response for feed:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;as you can see it gives us the time&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">facebook</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And the query to get the latest posts:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">latest_posts</span> <span class="o">=</span> <span class="ss">FbGraph</span><span class="p">:</span><span class="ss">:Query</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">SELECT</span> <span class="n">comment_info</span><span class="p">,</span><span class="n">post_id</span><span class="p">,</span><span class="n">message</span><span class="p">,</span><span class="n">actor_id</span><span class="p">,</span><span class="n">attachment</span><span class="p">,</span><span class="n">is_hidden</span><span class="p">,</span><span class="n">like_info</span><span class="p">,</span><span class="n">message_tags</span><span class="p">,</span><span class="n">permalink</span><span class="p">,</span><span class="n">privacy</span><span class="p">,</span><span class="n">created_time</span><span class="p">,</span><span class="n">updated_time</span><span class="p">,</span><span class="n">share_count</span><span class="p">,</span><span class="n">target_id</span><span class="p">,</span><span class="n">type</span><span class="p">,</span><span class="n">with_tags</span> <span class="n">from</span> <span class="n">stream</span> <span class="no">WHERE</span> <span class="n">source_id</span><span class="o">=</span><span class="n">me</span><span class="p">()</span> <span class="ow">and</span> <span class="p">(</span><span class="n">message</span> <span class="ow">or</span> <span class="n">attachment</span><span class="p">)</span> <span class="no">ORDER</span> <span class="no">BY</span> <span class="n">updated_time</span> <span class="no">DESC</span> <span class="no">LIMIT</span> <span class="mi">100</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="n">access_token</span><span class="ss">:token</span><span class="p">)</span>
</span><span class='line'><span class="n">posts</span> <span class="o">=</span> <span class="n">latest_posts</span><span class="o">.</span><span class="n">select</span> <span class="p">{</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span> <span class="n">post</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">updated_time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">time</span><span class="o">-</span><span class="mi">30</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">select</span><span class="p">{</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span> <span class="n">post</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">message</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">].</span><span class="n">present?</span> <span class="o">||</span> <span class="n">post</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">attachment</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">media</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
What&rsquo;s going on here? In the first query, I find all the posts of the user limit them to 100, order them by updated time and make sure that either message or attachment(photo) is present. In the next line I take only the posts that have an updated time 30 seconds(approximate time it takes Facebook to ping your servers) before the timestamp. And select the ones that either have a message or photos. Now we have a bunch of posts, time to decipher whether it is a status update, photo or comment.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;posts from the previous codeblock&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">posts</span><span class="o">.</span><span class="n">each</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">post</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">message</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">].</span><span class="n">present?</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;#create post</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  elsif post[&amp;ldquo;attachment&amp;rdquo;] &amp;amp;&amp;amp; post[&amp;ldquo;attachment&amp;rdquo;][&amp;ldquo;media&amp;rdquo;]&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">#create photo with post[&quot;attachment&quot;][&quot;media&quot;] passed as a parameter</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The post is fairly simple from here, we already have the attributes we need. Now in order to get comments for post, we can do the following query:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;you can sort by time if needed&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">comments</span> <span class="o">=</span> <span class="ss">FbGraph</span><span class="p">:</span><span class="ss">:Query</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">SELECT</span> <span class="nb">id</span><span class="p">,</span> <span class="n">user_likes</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">post_id</span><span class="p">,</span> <span class="n">fromid</span><span class="p">,</span> <span class="n">likes</span><span class="p">,</span> <span class="n">time</span> <span class="no">FROM</span> <span class="n">comment</span> <span class="no">WHERE</span> <span class="n">post_id</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="c1">#{post_id}&amp;rsquo; &amp;rdquo;).fetch(access_token:token)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
The use case for me is to update all the comments for the posts and add the new ones, hence I query for all of them. Facebook gives you the flexibility with the query language for any use case possible. Posts,and comments done and now time for photos.
After rigourous testing, Facebook gives only 9 photos. Let&rsquo;s say a user added an album, added 50 photos to this with normal queries that I am about to display Facebook will only give 9 photos back. The worst part is there&rsquo;s no way to decipher if there are more photos. One trick I found is, if Facebook gives you 9 photos that means there are more photos. Hence I find all the photos in the album.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;for each post from the previous block that has attachments&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">photo_ids</span> <span class="o">=</span> <span class="n">post</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">photo</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">fbid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="n">photo_ids</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">9</span>
</span><span class='line'>  <span class="c1"># get data for first photo</span>
</span><span class='line'>  <span class="nb">id</span> <span class="o">=</span> <span class="n">photo_ids</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>  <span class="n">photo_data</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/#&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="c1">#&lt;/a&gt;{id}?access_token=#{user.auth_token}&amp;rdquo;)</span>
</span><span class='line'>  <span class="c1">#parse album ID and get all photo id&amp;rsquo;s for that album</span>
</span><span class='line'>  <span class="n">album_id</span> <span class="o">=</span> <span class="n">photo_data</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">link</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">].</span><span class="n">match</span><span class="p">(</span><span class="sr">/(a.)([^.]+)/</span><span class="p">)</span><span class="o">[-</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="n">response</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/#&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="c1">#&lt;/a&gt;{album_id}/photos?fields=id&amp;amp;access_token=#{user.auth_token}&amp;rdquo;)</span>
</span><span class='line'>  <span class="n">photo_ids</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">parsed_response</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">data</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">].</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
I get the photo_ids from the first line, and if there are 9 which means more photos I get all photo IDs from the album.
Iterating over all the photo ID&rsquo;s to get the related informaton:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">photo_ids</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="nb">id</span><span class="o">|</span>
</span><span class='line'>  <span class="n">photo_data</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/#&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="c1">#&lt;/a&gt;{id}?access_token=#{user.auth_token}&amp;rdquo;)</span>
</span><span class='line'>  <span class="c1">#and for comments</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">photo_data</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">comments</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;photo_data[&quot;comments&quot;][&quot;data&quot;].each do |comment|</span>
</span><span class='line'><span class="sr">  #use comment information</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
As you can see there&rsquo;s a lot of edge cases here, so you must test thoroughly. Both manually and with automated tests. One good thing about the photo query is that it gives you comment information too. The following takes care of status updates, comments on them, photos posted on the wall, comments to those and if the user posts an album. The only part I haven&rsquo;t been able to get is realtime comment on a photo which is inside an album. I am currently working on that, and will update this post if I find a way.</p>

<h3>Wrapping it all up.</h3>

<p>Despite it&rsquo;s limitations Facebook has done a great job with the realtime updates and <a href="https://developers.facebook.com/docs/reference/fql/">Facebook Query Language</a>. I can&rsquo;t stress this point enough, test thoroughly. Manually and with automated testing such as Rspec. I have written tests for this and might showcase it in a later blog post. Whenever you get stuck, instead of searching StackOverflow which at times can help, the best approach I found is to use the <a href="https://developers.facebook.com/tools/explorer">Graph Explorer</a>.</p>

<p>Hope that was useful, let me know if you have any questions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a Secure and Versioned API in Rails]]></title>
    <link href="http://shivamd.github.io/blog/2013/11/01/creating-a-secure-and-versioned-api-in-rails/"/>
    <updated>2013-11-01T23:55:00+04:00</updated>
    <id>http://shivamd.github.io/blog/2013/11/01/creating-a-secure-and-versioned-api-in-rails</id>
    <content type="html"><![CDATA[<p>Been working on a side project with a friend and we were at the point where we needed to build an API for the code we had written. The idea was to build an API which can be accessed by our customers with an API key.</p>

<p>After some research, I found couple  of gems that make it easy to do this. <a href="https://github.com/filtersquad/rocket_pants">Rocket Pants</a> and <a href="https://github.com/bploetz/versionist">Versionist</a>. In order to reduce the dependencies, I decided to build it myself with the help of <a href="https://railscasts.com">RailsCasts</a>.</p>

<h3>Creating the API.</h3>

<p>We will start off by creating the routes for it.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;namespace :api do</span>
</span><span class='line'><span class="sr">  namespace :v1 do&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">namespace</span> <span class="ss">:search</span> <span class="k">do</span>
</span><span class='line'>   <span class="n">get</span> <span class="s2">&quot;youtube&quot;</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This block of code gives us the following route:
<code>
/api/v1/search/youtube
</code></p>

<p>Now in order to create the controller, since they are namespaced under api and the version number you must put the controller inside the two modules.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/controllers/api/v1/search_controller.rb</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Api</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">V1</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;class SearchController &amp;lt; ApplicationController</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  def youtube</span>
</span><span class='line'><span class="sr">    #code that searches for youtube videos</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now doing the following should give you a list of YouTube results in a JSON format.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl yoururl.com/api/v1/search/youtube?query<span class="o">=</span>funny
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This setup gives us the ability to easily add new versions of the API while maintaining backwards compatibility. The only thing is that the API is not secure.</p>

<h3>Securing the API.</h3>

<p>There are a few ways you can do this. Instead of doing it with OAuth I just created an access token given to each application created. The access token is created using a SecureRandom.hex string.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/models/user.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="c1">#code for authentication&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">has_many</span> <span class="ss">:applications</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/models/application.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;class Application &amp;lt; ActiveRecord::Base</span>
</span><span class='line'><span class="sr">  before_create :generate_access_token&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">belongs_to</span> <span class="ss">:user</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  private&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">def</span> <span class="nf">generate_access_token</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;begin </span>
</span><span class='line'><span class="sr">  self.access_token = SecureRandom.hex</span>
</span><span class='line'><span class="sr">end while self.class.exists?(access_token: access_token)</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The way I set this up is that a user can have many applications, and each application belongs to a user. Before an application is created there is a unique key which is generated restricing access to the API.
There are other columns you can add to the model if needed such as permissions, expires_at etc.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/controllers/api/v1/search_controller.rb</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Api</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">V1</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;class SearchController &amp;lt; ApplicationController</span>
</span><span class='line'><span class="sr">  before_filter :restrict_access</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  def youtube</span>
</span><span class='line'><span class="sr">    #code that searches for youtube videos</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  private </span>
</span><span class='line'>
</span><span class='line'><span class="sr">  def restrict_access</span>
</span><span class='line'><span class="sr">    app = Application.find_by_access_token(params[:access_token])</span>
</span><span class='line'><span class="sr">    head :unauthorized unless app</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Updating the controller in order to send an unauthorized response if the access key is invalid. Now in order to make a request the user has to send in the right access_token in the parameters. Also make sure to not make the access_token field accessible using attr_accessible or in rails 4 you can do the following:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/controllers/applications.rb</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;class ApplicationsController &amp;lt; ApplicationController</span>
</span><span class='line'><span class="sr">  #code for controller&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">def</span> <span class="nf">create</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;@application = current_user.applications.build(application_params)</span>
</span><span class='line'><span class="sr">#code to save application</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="kp">private</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  def application_params&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:application</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Instead of directly passing in the params[:application] we pass the build method a method itself. This private method makes sure to only permit the application name.</p>

<p>Since the output of my controllers were already in JSON there was no need for <a href="https://github.com/nesquena/rabl">RABL</a>. Also for those looking for something lightweight can have a look at <a href="https://github.com/rails-api/rails-api">Rails-API</a>. This is enough to get you started if you any questions leave comments and I shall address them.</p>
]]></content>
  </entry>
  
</feed>
