<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: code | Shivam Daryanani's Blog]]></title>
  <link href="http://shivamd.github.io/blog/categories/code/atom.xml" rel="self"/>
  <link href="http://shivamd.github.io/"/>
  <updated>2013-12-01T19:51:58+04:00</updated>
  <id>http://shivamd.github.io/</id>
  <author>
    <name><![CDATA[Shivam Daryanani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Simple Infinite Scroll]]></title>
    <link href="http://shivamd.github.io/blog/2013/12/01/simple-infinite-scroll/"/>
    <updated>2013-12-01T18:23:00+04:00</updated>
    <id>http://shivamd.github.io/blog/2013/12/01/simple-infinite-scroll</id>
    <content type="html"><![CDATA[<p>A lot of websites use infinite scroll including Facebook&amp;Twitter. There are a lot of Ruby Gems that help in implementing this but it&rsquo;s rather simple to create your own with Javascript and avoid adding another gem to your app.</p>

<p>Let&rsquo;s say we have a <code>ul</code> with a id of <code>videos</code>, inside this there are a lot of <code>li</code> tags that contain title&rsquo;s of videos.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;videos&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;video&quot;</span><span class="nt">&gt;</span>YouTube Video 1<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;video&quot;</span><span class="nt">&gt;</span>YouTube Video 2<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;video&quot;</span><span class="nt">&gt;</span>YouTube Video 3<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;video&quot;</span><span class="nt">&gt;</span>YouTube Video 4<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;video&quot;</span><span class="nt">&gt;</span>YouTube Video 5<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- more videos --&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We want to detect when a user hit&rsquo;s the bottom of these videos and make a call to grab more videos.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nv">checkVideoScroll = </span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="o">&amp;</span><span class="nx">ndash</span><span class="p">;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="nv">element = </span><span class="nx">$</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">())</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">element</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollHeight</span> <span class="o">&amp;</span><span class="nx">ndash</span><span class="p">;</span> <span class="nx">element</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">()</span> <span class="o">==</span> <span class="nx">element</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">()</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="c1">#make call to get more videos</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">$</span> <span class="o">&amp;</span><span class="nx">ndash</span><span class="p">;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;.</span><span class="nx">videos</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;).</span><span class="nx">on</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">scroll</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span> <span class="nx">checkVideoScroll</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>When the document loads we set a scroll listener on the list of videos. When a user scrolls down, we call the <code>checkVideoScroll</code> method. On the first line the method assigns element to be the current target, which in this case is the <code>ul</code>.
The <code>scrollHeight</code> is the height of the element including content not visible on the screen. The <code>scrollTop()</code> gets the scroll top offset of the element. The <code>outerHeight()</code> is a jQuery method that returns the visible portion of the scrollable element.
<img class="center" src="/images/scroll.jpg"></p>

<p>As you can see once the user scrolls all the way to the bottom, <code>scrollHeight - scrollTop()</code> will equal the <code>outerHeight()</code> and that&rsquo;s when we make a call to get more videos.</p>

<p>As you can see infinite scroll is simple with jQuery.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Harnessing the Power of Ctags in Vim]]></title>
    <link href="http://shivamd.github.io/blog/2013/11/16/harnessing-the-power-of-ctags-in-vim/"/>
    <updated>2013-11-16T22:51:00+04:00</updated>
    <id>http://shivamd.github.io/blog/2013/11/16/harnessing-the-power-of-ctags-in-vim</id>
    <content type="html"><![CDATA[<p>What is Ctags? It&rsquo;s a tool that creates an index file of functions, variables, class names and so on based on the language. This makes it easy to navigate a code base, and makes you feel like a badass.</p>

<p>At times you come across a method and have no idea where in the source code it is. Imagine with a press of a command it takes you there immediately. You are writing Rails code and want to look at the documentation for let&rsquo;s say <code>validates</code>, instead of doing a google search just use Ctags! You no longer have to get scared of a large code base.</p>

<h3>The setup.</h3>

<p>Ctags come shipped in with MacOS but you&rsquo;ll want the exuberant Ctags.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install ctags
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If you did the installation right, you should get the following output when running <code>ctags --version</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Exuberant Ctags 5.8, Copyright &copy; 1996-2009 Darren Hiebert
</span><span class='line'>Compiled: Nov 15 2013, 00:46:27  Addresses: &lt;a href="&#x6d;&#97;&#x69;&#108;&#x74;&#111;&#x3a;&#100;&#104;&#105;&#101;&#x62;&#101;&#114;&#x74;&#x40;&#x75;&#115;&#101;&#114;&#x73;&#x2e;&#115;&#x6f;&#117;&#x72;&#99;&#101;&#x66;&#x6f;&#114;&#x67;&#x65;&#x2e;&#x6e;&#x65;&#x74;">&#100;&#x68;&#105;&#x65;&#x62;&#x65;&#x72;&#x74;&#64;&#117;&#x73;&#x65;&#114;&#x73;&#46;&#x73;&#111;&#117;&#114;&#x63;&#101;&#102;&#111;&#114;&#103;&#x65;&#x2e;&#x6e;&#x65;&#116;&lt;/a>,
</span><span class='line'>&lt;a href="http://ctags.sourceforge.net">http://ctags.sourceforge.net&lt;/a>  Optional compiled features: +wildcards, +regex</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Indexing a directory</h3>

<p>Now that we have Ctags installed, go to the root file of your code base and run the following command:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ctags -R
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The <code>-R</code> is to recurse through the subdirectories. Now there should be a tags file created in the directory. If you are using Git for version control, I recommend putting this in your global gitignore.</p>

<h3>Indexing your Ruby Gems.</h3>

<p>This is best done through the ruby gem <code>gem-ctags</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install ctags
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And then run:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem ctags
</span></code></pre></td></tr></table></div></figure></notextile></div>
This will index all the gems and you won&rsquo;t have to ever do this again. From now on whenever you install a gem, it will get automatically indexed.</p>

<h3>Auto Indexing.</h3>

<p>Despite the awesomeness of Ctags you might be thinking you have to always manually index a directory. Whenever you pull code from Github, merge in branches etc. This issue has been solved by <a href="http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html">the great Tim Pope</a>. The article explains how to setup auto indexing using git hooks. There is one point that I missed out, he says to make the files executable. To do that:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod +x file_name
</span></code></pre></td></tr></table></div></figure></notextile></div>
You must do this for all the files as he states.
Now any time you pull, merge or commit the tags file will get updated.</p>

<p>However this won&rsquo;t work yet for existing repositories, you must reinitialize them with <code>git init</code> followed by <code>git ctags</code></p>

<h3>Navigating.</h3>

<p>With all that out of the way, on to the fun stuff. Open a file place your cursor on a word. Let&rsquo;s say you&rsquo;re in the post class and you see the word User. Navigating to that word and pressing &lt;C-]>&ldquo;control and close bracket&rdquo;, will jump you to the User class. You can keep diving deep into the code base with this. At times you can go a bit too deep,the good news is that Vim keeps a history of things. Hit <code>:tags</code> to access that.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="c"># TO tag         FROM line  in file/text</span>
</span><span class='line'> 1  1 User                6  ~/programming/contractjobs/teen_w/app/models/crons/daily_alerts_email.rb
</span><span class='line'> 2  1 devise              6  app/models/user.rb
</span><span class='line'> 3  1 attr_accessible    10  app/models/user.rb
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This is my current list, you can move back and forth between this by &lt;C-o>&ldquo;control O&rdquo; and &lt;C-i>&ldquo;control i&rdquo;. As you can see I have <code>attr_accessible</code> in my list, this is a method in the rails framework. The one thing I absolutely love about Ctags is that it makes navigating your gems' source code very easy. My rails knowledge has increased really fast thanks to this. As the say, the best way to improve as a developer is too read other people&rsquo;s code.</p>

<p>You can prefix the ctag command with a <code>g</code>  to get a full list of matches to choose from.
This should be enough to get you started there are a lot of other commands <code>help ctags</code> to find out more.
<a href="https://github.com/SublimeText/CTags">For Sublime Text users</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Receiving Email in a Rails App]]></title>
    <link href="http://shivamd.github.io/blog/2013/11/07/receiving-email-in-a-rails-app/"/>
    <updated>2013-11-07T02:07:00+04:00</updated>
    <id>http://shivamd.github.io/blog/2013/11/07/receiving-email-in-a-rails-app</id>
    <content type="html"><![CDATA[<p>Receiving email in a Rails app can be tricky. The Action Mailer library has minimal support for this and it can be quite tricky. This is where SendGrid&rsquo;s <a href="http://sendgrid.com/docs/API_Reference/Webhooks/parse.html">parse API</a> comes in along with the gem released by ThoughtBot called <a href="http://github.com/thoughtbot/griddler">Griddler</a>.</p>

<h3>Setup</h3>

<p>Start of by adding the griddler gem to your gemfile.</p>

<p><code>
gem "griddler"
</code>
Followed by a bundle install. If you run rake routes, you will see Griddler has created a route to receive mails on.
If you need to edit this route, you can paste it in your routes file.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">post</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">/</span><span class="n">email_processor</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="o">=&gt;</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">griddler</span><span class="o">/</span><span class="n">emails</span><span class="c1">#create&amp;rsquo;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>By default Griddler will look for an EmailProcessor class. You can create one in the models folder.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/models/email_processor.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">EmailProcessor</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">process</span><span class="p">(</span><span class="n">email</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;#create models, process reports etc.</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>These are the following attributes available on the email received.
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.to
</span><span class='line'>.from
</span><span class='line'>.subject
</span><span class='line'>.body
</span><span class='line'>.raw_text
</span><span class='line'>.raw_html
</span><span class='line'>.raw_body
</span><span class='line'>.attachments
</span><span class='line'>.headers
</span><span class='line'>.raw_headers</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Email server setup</h3>

<p>For my app I ended up using SendGrid, which has an add-on for Heroku. Once your account is setup, go the <a href="http://sendgrid.com/developer/reply">parse webhook settings page</a>.</p>

<p><img class="center" src="/images/sendgrid_settings.png"></p>

<p><strong>In order for this to work you need a domain name</strong>. Your site doesn&rsquo;t necessarily have to be deployed on it. Enter the domain you are going to use in the domain field. For the URI enter the route where you want to receive mails. I have used <a href="http://ngrok.com/">Ngrok</a> as I wanted to test it in development.</p>

<p>The last part needed in order to receive emails is to point your domain&rsquo;s MX record to, in this case, mx.sendgrid.net.
What is a MX record?
The full form is Mail Exchanger record. It specifies how email should be routed for a particular domain. It specifies a mail server, in this case sendgrid, for accepting emails for your domain.
Go to your domain settings and create a MX record which points to mx.sendgrid.net. An example for <a href="http://namecheap.com">Namecheap</a> would look like this.
You will also need to setup an email for your domain, by default namecheap creates an <a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#105;&#x6e;&#x66;&#111;&#64;&#121;&#x6f;&#x75;&#114;&#100;&#x6f;&#109;&#97;&#105;&#x6e;&#46;&#x63;&#x6f;&#109;&#46;">&#105;&#110;&#x66;&#x6f;&#x40;&#x79;&#x6f;&#117;&#x72;&#100;&#111;&#x6d;&#x61;&#x69;&#110;&#x2e;&#x63;&#x6f;&#x6d;&#46;</a></p>

<p><img class="center" src="/images/namecheap.png"></p>

<p>And that&rsquo;s it! Start your rails server along with ngrok or a localtunnel. Give it a go send an email to the address you created in the domain settings.
In my case this would be <a href="&#x6d;&#97;&#105;&#108;&#x74;&#x6f;&#58;&#105;&#110;&#x66;&#111;&#x40;&#x73;&#104;&#105;&#118;&#x61;&#x6d;&#100;&#97;&#x72;&#121;&#97;&#x6e;&#97;&#110;&#105;&#x2e;&#x63;&#x6f;&#x6d;">&#105;&#110;&#102;&#111;&#x40;&#x73;&#x68;&#x69;&#118;&#97;&#x6d;&#x64;&#x61;&#x72;&#x79;&#x61;&#110;&#97;&#x6e;&#x69;&#x2e;&#x63;&#x6f;&#109;</a> and boom you should have received a post message from Sendgrid. You would want to put a debugger inside the method to play around with email object that Griddler gives you.
The SendGrid API expects a 200 response from your endpoint. If it doesn&rsquo;t get it or if your site is down, it tries up to 3 times in set intervals until it reaches your app. Which is great if your site is under maintenance.</p>

<h3>Why would I want to receive email?</h3>

<p>That&rsquo;s a good question. A lot of sites create their support tickets in this way. Once you email support@domain.com, it parses the email and creates the ticket. Also here is a list of creative ideas:</p>

<ul>
<li><a href="https://thebirdy.com/">The Birdy</a></li>
<li><a href="http://www.nudgemail.com/">Nudge Mail</a></li>
<li><a href="https://idonethis.com/">IDoneThis</a></li>
</ul>


<p>Hope this was useful let me know if you come across any roadblocks.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nested Attributes in Rails 4]]></title>
    <link href="http://shivamd.github.io/blog/2013/11/03/nested-attributes-in-rails-4/"/>
    <updated>2013-11-03T23:24:00+04:00</updated>
    <id>http://shivamd.github.io/blog/2013/11/03/nested-attributes-in-rails-4</id>
    <content type="html"><![CDATA[<p>Often when creating a web application there comes a time where two models are related and you want to create one form where you can add both the attributes. Let&rsquo;s say you have a topic model which has many questions, and you want to create the topic and questions for it in one form. Rails makes this easy with the accepts_nested_attributes_for method.</p>

<h3>Models</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/models/topic.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Topic</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:questions</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/models/question.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Question</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:topic</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In order for the topic form to be able to add questions, we need the following line:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/models/topic.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Topic</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:questions</span>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:questions</span><span class="p">,</span> <span class="n">allow_destroy</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Accepts nested attributes is just a shortcut, it defines a dynamic attribute {field_name}_attributes so you can automatically assign them to an association. The allow destroy lets you destroy question objects in this case through the form, it is set to false from the start. There are other methods you can use with this, such as reject_if, limit and  update_only. More information can be found from the <a href="http://apidock.com/rails/ActiveRecord/NestedAttributes/ClassMethods/accepts_nested_attributes_for">source</a>.</p>

<h3>Form</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="sx">%= form_for @topic do |f| %&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;p&gt;  &lt;div id=</span><span class="s2">&quot;name&quot;</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;&amp;lt;%= f.text_field :name, placeholder: &quot;Name&quot; %&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  &lt;/</span><span class="n">div</span><span class="o">&gt;&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  &lt;div id=&quot;questions&quot; class=&quot;field&quot;&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="sx">%= f.fields_for :questions do |builder| %&amp;gt;</span>
</span><span class='line'><span class="sx">  &amp;lt;div class=</span><span class="s2">&quot;question&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="sx">%= builder.text_field :content, placeholder: &quot;Question&quot; %&amp;gt;</span>
</span><span class='line'><span class="sx">  &amp;lt;/div&amp;gt;</span>
</span><span class='line'><span class="sx">&amp;lt;% end %&amp;gt;</span>
</span><span class='line'><span class="sx">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;p&gt;  &lt;/div&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;p&gt;  &amp;lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Create</span> <span class="n">topic</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="sx">%&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%</span> <span class="k">end</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
This creates a simple form which allows you to create a topic with a name and add one question to it.</p>

<h3>Controller &amp; Routes</h3>

<p>The controller method for create is your regular create method, nothing fancy. That&rsquo;s why I love Rails.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/controllers/topics_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TopicsController</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="no">ApplicationController</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  def new&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="vi">@topic</span> <span class="o">=</span> <span class="no">Topic</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="vi">@question</span> <span class="o">=</span> <span class="vi">@topic</span><span class="o">.</span><span class="n">questions</span><span class="o">.</span><span class="n">build</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  def create&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="vi">@topic</span> <span class="o">=</span> <span class="no">Topic</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">topic_params</span><span class="p">)</span>
</span><span class='line'><span class="k">unless</span> <span class="vi">@topic</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>  <span class="n">render</span> <span class="ss">:new</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="n">redirect_to</span> <span class="n">root_path</span><span class="p">,</span> <span class="ss">notice</span><span class="p">:</span> <span class="s2">&quot;Successfully created a topic&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  private&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">def</span> <span class="nf">topic_params</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;params.require(:topic).permit(:name, questions_attributes: [:content])</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The new method creates the instances for both topic and questions. In the create action we instantiate a topic passing in a method. This is a private method needed in Rails 4 to make sure only the allowed attributes are used. We require the topic parameters and permit the name for a topic and the questions_attributes. Now all we need are the routes and this will work.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">resources</span> <span class="ss">:topics</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now we have a simple version of adding questions to a topic, but we still don&rsquo;t have validations.</p>

<h3>Validations</h3>

<p>It is good practice to have your validations on both the database level and on the Rails model&rsquo;s itself. The validation for the association is not as straightforward as it seems.  A common approach would look like this.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/models/topic.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Topic</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:questions</span>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:questions</span><span class="p">,</span> <span class="n">allow_destroy</span><span class="p">:</span> <span class="kp">true</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  validates :name, presence: true</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/models/question.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Question</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:topic</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:content</span><span class="p">,</span> <span class="ss">:topic_id</span><span class="p">,</span>  <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>These are simple validations that would normally pass but they won&rsquo;t because of the nested forms. You need to tell Rails that the two model relations describe the same relationship but from the opposite direction. Rails provides a method for this, inverse_of. Rails has a method for everything.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/models/topic.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Topic</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:questions</span><span class="p">,</span> <span class="n">inverse_of</span> <span class="ss">:topic</span>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:questions</span><span class="p">,</span> <span class="n">allow_destroy</span><span class="p">:</span> <span class="kp">true</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  validates :name, presence: true</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/models/question.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Question</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:topic</span><span class="p">,</span> <span class="n">inverse_of</span> <span class="ss">:questions</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:content</span><span class="p">,</span> <span class="ss">:topic</span><span class="p">,</span>  <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>As you can see we indicated the inverse of relation from both sides. Also now the Question model validates the topic itself instead of the ID.</p>

<p>There you have it, a form that accepts nested attributes in Rails 4 with validations.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook Realtime Updates in a Rails Application]]></title>
    <link href="http://shivamd.github.io/blog/2013/11/03/facebook-realtime-updates/"/>
    <updated>2013-11-03T00:01:00+04:00</updated>
    <id>http://shivamd.github.io/blog/2013/11/03/facebook-realtime-updates</id>
    <content type="html"><![CDATA[<p>Since Facebook has rolled out realtime updates it has been easier to gather information. Instead of hitting the API on a set time interval, we can just wait for Facebook to ping us and go grab the information we need. This all sounds good in theory but as I had to integrate realtime updates for an application I am working on, there were quite a few pitfalls and I wish I knew some of these before hand.</p>

<h3>Setting up a Facebook application</h3>

<p>I am not going to walk you through creating a Facebook application, <a href="http://railscasts.com/episodes/360-facebook-authentication?view=asciicast">Ryan Bates</a> already does a good job with it. Once you have that setup and the permissions you need for this application head over to your <a href="https://developers.facebook.com/apps">Facebook applications</a> dashboard. Over here select the application in which you would like to enable realtime updates and hit the edit button on the top right. This should take you to a page with the basic information of your application, and on the right under settings there should be &lsquo;realtime updates&rsquo;.</p>

<p><img class="center" src="/images/realtime_settings.png"></p>

<p>As you can see I have a user object and the fields I want to follow. I have selected all the fields for the demo. You should only select the fields your app has permissions for, otherwise it would be pointless as you won&rsquo;t be able to get the information.
For the callback URL you should point it to the route of the realtime action, but you must be thinking how will I test this locally? That&rsquo;s where <a href="https://ngrok.com/">Ngrok</a> comes in. Ngrok creates a tunnel from the public internet to a port on your local machine. This is perfect for a situation like this where Facebook has to verify that you are authorized.
The information on the site is self explanatory, once installed have it listen to the same port as your server.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rails s -p 3000&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;on a different Terminal window&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;path/to/ngrok 3000
</span></code></pre></td></tr></table></div></figure></notextile></div>
Ngrok will give you a URL which you can paste in to the callback section followed by the route to the realtime action. For the verify token any random string will do.</p>

<h3>Setting up the controller</h3>

<p>Now create a facebook controller with the real_time method.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/controllers/facebook_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>   <span class="k">def</span> <span class="nf">real_time</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;if request.method == &quot;GET&quot;</span>
</span><span class='line'><span class="sr">  if params[&#39;hub.mode&#39;] ==&#39;subscribe&#39; &amp;amp;&amp;amp; params[&#39;hub.verify_token&#39;] ==&#39;stringToken&#39;</span>
</span><span class='line'><span class="sr">    render :text =&amp;gt; params[&#39;hub.challenge&#39;]</span>
</span><span class='line'><span class="sr">  else</span>
</span><span class='line'><span class="sr">    render :text =&amp;gt; &#39;Failed to authorize facebook challenge request&#39;</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'><span class="sr">elsif request.method == &quot;POST&quot;</span>
</span><span class='line'><span class="sr">  #do stuff with information </span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And the routes should look like this:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;namespace :facebook do</span>
</span><span class='line'><span class="sr">  match &quot;/</span><span class="n">real_time</span><span class="s2">&quot;, :action =&amp;gt; :real_time, :as =&amp;gt; &#39;facebook_subscription&#39;, :via =&amp;gt; [:get,:post]</span>
</span><span class='line'><span class="s2">end</span>
</span><span class='line'><span class="s2">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now that we have the route set up for both GET&amp;POST, when we click on test on the realtime updates page Facebook will make a get request to this route ensuring we are authorized. The default hub.mode set by Facebook is subscribe and you must make sure that the verify_token matches what you have entered on Facebook. If all went well Facebook will prompt you with the following message:</p>

<p><img class="center" src="/images/realtime_success.png"></p>

<h3>And we are done&hellip;not really.</h3>

<p>Your application is running, realtime updates are setup and you have a test account to play around with. On every change the user makes to the field you have subscribed to, Facebook will ping your servers. However it will only do so with the Facebook ID, the fields that have changed and a timestamp. This means that we still have to query the API and this can be quite a pain when it comes to things like comments or photos. The good thing is I have banged my head on this for the past week and should be able to alleviate a lot of your troubles.</p>

<p>Facebook example response for relationship change:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">relationship_status</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">facebook</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">relationship_status</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Now in order to actually grab the change we have to make a call to the Facebook API requesting this information. You will only be able to get this information if you have the right permissions.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1">#you&amp;rsquo;ll need the HTTParty gem</span>
</span><span class='line'>  <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/#&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="c1">#&lt;/a&gt;{uid}?fields=relationship_status&amp;amp;access_token=&amp;rdquo; + auth_token)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
This gives the information for the relationship status. This seems and is straight forward and these are the building pieces for every change. However there are some caveats. Below are snippets in order to get events,friends,posts,photos&amp;comments.</p>

<h3>Events</h3>

<p>Facebook example response for events change:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">events</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">facebook</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">events</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And the query to get all event ID&rsquo;s and the respective information:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1">#where token is the user&amp;rsquo;s auth token</span>
</span><span class='line'>  <span class="n">event_ids</span> <span class="o">=</span> <span class="ss">FbGraph</span><span class="p">:</span><span class="ss">:Query</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">SELECT</span> <span class="n">eid</span><span class="p">,</span> <span class="n">rsvp_status</span> <span class="no">FROM</span> <span class="n">event_member</span> <span class="no">WHERE</span> <span class="n">uid</span> <span class="o">=</span> <span class="c1">#{uid}&amp;rdquo;).fetch(access_token: token)</span>
</span><span class='line'>  <span class="n">event_ids</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">event_id</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;event_info = FbGraph::Query.new(&quot;SELECT creator, eid, all_members_count, attending_count, not_replied_count, declined_count, unsure_count, privacy, host, location, name, description, venue, pic, start_time, end_time FROM event WHERE eid=</span><span class="si">#{</span><span class="n">event_id</span><span class="o">[</span><span class="s1">&#39;eid&#39;</span><span class="o">]</span><span class="si">}</span><span class="sr">&quot;).fetch(access_token: token)</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Friends</h3>

<p>Facebook example response for friends change:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">friends</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">facebook</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">friends</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And the query to get all friend&rsquo;s related information:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;token is the user&amp;rsquo;s auth token&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">friends</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/&lt;</span><span class="sr">/a&gt;&amp;rdquo; + uid + &amp;ldquo;/</span><span class="n">friends?access_token</span><span class="o">=&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="n">token</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">fields</span><span class="o">=</span><span class="n">birthday</span><span class="p">,</span><span class="n">age_range</span><span class="p">,</span><span class="n">gender</span><span class="p">,</span><span class="n">first_name</span><span class="p">,</span><span class="n">last_name</span><span class="p">,</span><span class="nb">name</span><span class="p">,</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">.</span><span class="n">parsed_response</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">data</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span>
</span><span class='line'><span class="n">friends</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">friend</span><span class="o">|</span>
</span><span class='line'>  <span class="n">friend_data</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/&lt;</span><span class="sr">/a&gt;&amp;rdquo; + friend[&amp;ldquo;id&amp;rdquo;] + &amp;ldquo;?access_token=&amp;rdquo; + token + &amp;ldquo;&amp;amp;fields=about,age_range,birthday,link,bio,events,gender,interested_in,location,name,relationship_status,significant_other,first_name,interested_in,last_name,locale,location,username,family,likes,locations,movies,picture,photos,posts,security_settings&amp;rdquo;).parsed_response</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Posts,Photos&amp;Comments</h3>

<p>Now this is where things start to get complicated. As you can see Facebook sends &lsquo;feed&rsquo; as a changed field with every column.With every change to anything on Facebook it needs to update the feed and in order to get the photos,posts and comments we must query the feed or stream in the Facebook Query Language. Despite being able to get posts on the &lsquo;status&rsquo; changed field and photos on the &lsquo;photos&rsquo; changed field, I found it best to look for the feed change and make a query.</p>

<p>One great thing with the Facebook Query Language is that you can add conditions to your queries.When making a query after a realtime update, you can put a conditional for updated time to be just before the timestamp given by Facebook.That&rsquo;s what I thought too, but after a lot of digging Facebook doesn&rsquo;t give you the right information. The only way around this is to get all the posts, sort them by updated time and then use ruby&rsquo;s built in methods to select the posts before a certain time.</p>

<p>Facebook example response for feed:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;as you can see it gives us the time&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">facebook</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">object</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">entry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">uid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100928374283421</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;</span><span class="mi">1383426584</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">changed_fields</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">=&gt;[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">feed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span><span class="p">}</span><span class="o">]</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And the query to get the latest posts:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">latest_posts</span> <span class="o">=</span> <span class="ss">FbGraph</span><span class="p">:</span><span class="ss">:Query</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">SELECT</span> <span class="n">comment_info</span><span class="p">,</span><span class="n">post_id</span><span class="p">,</span><span class="n">message</span><span class="p">,</span><span class="n">actor_id</span><span class="p">,</span><span class="n">attachment</span><span class="p">,</span><span class="n">is_hidden</span><span class="p">,</span><span class="n">like_info</span><span class="p">,</span><span class="n">message_tags</span><span class="p">,</span><span class="n">permalink</span><span class="p">,</span><span class="n">privacy</span><span class="p">,</span><span class="n">created_time</span><span class="p">,</span><span class="n">updated_time</span><span class="p">,</span><span class="n">share_count</span><span class="p">,</span><span class="n">target_id</span><span class="p">,</span><span class="n">type</span><span class="p">,</span><span class="n">with_tags</span> <span class="n">from</span> <span class="n">stream</span> <span class="no">WHERE</span> <span class="n">source_id</span><span class="o">=</span><span class="n">me</span><span class="p">()</span> <span class="ow">and</span> <span class="p">(</span><span class="n">message</span> <span class="ow">or</span> <span class="n">attachment</span><span class="p">)</span> <span class="no">ORDER</span> <span class="no">BY</span> <span class="n">updated_time</span> <span class="no">DESC</span> <span class="no">LIMIT</span> <span class="mi">100</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="n">access_token</span><span class="ss">:token</span><span class="p">)</span>
</span><span class='line'><span class="n">posts</span> <span class="o">=</span> <span class="n">latest_posts</span><span class="o">.</span><span class="n">select</span> <span class="p">{</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span> <span class="n">post</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">updated_time</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">time</span><span class="o">-</span><span class="mi">30</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">select</span><span class="p">{</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span> <span class="n">post</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">message</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">].</span><span class="n">present?</span> <span class="o">||</span> <span class="n">post</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">attachment</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">media</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
What&rsquo;s going on here? In the first query, I find all the posts of the user limit them to 100, order them by updated time and make sure that either message or attachment(photo) is present. In the next line I take only the posts that have an updated time 30 seconds(approximate time it takes Facebook to ping your servers) before the timestamp. And select the ones that either have a message or photos. Now we have a bunch of posts, time to decipher whether it is a status update, photo or comment.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;posts from the previous codeblock&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">posts</span><span class="o">.</span><span class="n">each</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">post</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">message</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">].</span><span class="n">present?</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;#create post</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  elsif post[&amp;ldquo;attachment&amp;rdquo;] &amp;amp;&amp;amp; post[&amp;ldquo;attachment&amp;rdquo;][&amp;ldquo;media&amp;rdquo;]&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">#create photo with post[&quot;attachment&quot;][&quot;media&quot;] passed as a parameter</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The post is fairly simple from here, we already have the attributes we need. Now in order to get comments for post, we can do the following query:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;you can sort by time if needed&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">comments</span> <span class="o">=</span> <span class="ss">FbGraph</span><span class="p">:</span><span class="ss">:Query</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">SELECT</span> <span class="nb">id</span><span class="p">,</span> <span class="n">user_likes</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">post_id</span><span class="p">,</span> <span class="n">fromid</span><span class="p">,</span> <span class="n">likes</span><span class="p">,</span> <span class="n">time</span> <span class="no">FROM</span> <span class="n">comment</span> <span class="no">WHERE</span> <span class="n">post_id</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="c1">#{post_id}&amp;rsquo; &amp;rdquo;).fetch(access_token:token)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
The use case for me is to update all the comments for the posts and add the new ones, hence I query for all of them. Facebook gives you the flexibility with the query language for any use case possible. Posts,and comments done and now time for photos.
After rigourous testing, Facebook gives only 9 photos. Let&rsquo;s say a user added an album, added 50 photos to this with normal queries that I am about to display Facebook will only give 9 photos back. The worst part is there&rsquo;s no way to decipher if there are more photos. One trick I found is, if Facebook gives you 9 photos that means there are more photos. Hence I find all the photos in the album.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;for each post from the previous block that has attachments&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">photo_ids</span> <span class="o">=</span> <span class="n">post</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">photo</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">fbid</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="n">photo_ids</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">9</span>
</span><span class='line'>  <span class="c1"># get data for first photo</span>
</span><span class='line'>  <span class="nb">id</span> <span class="o">=</span> <span class="n">photo_ids</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>  <span class="n">photo_data</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/#&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="c1">#&lt;/a&gt;{id}?access_token=#{user.auth_token}&amp;rdquo;)</span>
</span><span class='line'>  <span class="c1">#parse album ID and get all photo id&amp;rsquo;s for that album</span>
</span><span class='line'>  <span class="n">album_id</span> <span class="o">=</span> <span class="n">photo_data</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">link</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">].</span><span class="n">match</span><span class="p">(</span><span class="sr">/(a.)([^.]+)/</span><span class="p">)</span><span class="o">[-</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="n">response</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/#&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="c1">#&lt;/a&gt;{album_id}/photos?fields=id&amp;amp;access_token=#{user.auth_token}&amp;rdquo;)</span>
</span><span class='line'>  <span class="n">photo_ids</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">parsed_response</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">data</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">].</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nb">id</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
I get the photo_ids from the first line, and if there are 9 which means more photos I get all photo IDs from the album.
Iterating over all the photo ID&rsquo;s to get the related informaton:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">photo_ids</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="nb">id</span><span class="o">|</span>
</span><span class='line'>  <span class="n">photo_data</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://graph.facebook.com/#&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="c1">#&lt;/a&gt;{id}?access_token=#{user.auth_token}&amp;rdquo;)</span>
</span><span class='line'>  <span class="c1">#and for comments</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">photo_data</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">comments</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;photo_data[&quot;comments&quot;][&quot;data&quot;].each do |comment|</span>
</span><span class='line'><span class="sr">  #use comment information</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
As you can see there&rsquo;s a lot of edge cases here, so you must test thoroughly. Both manually and with automated tests. One good thing about the photo query is that it gives you comment information too. The following takes care of status updates, comments on them, photos posted on the wall, comments to those and if the user posts an album. The only part I haven&rsquo;t been able to get is realtime comment on a photo which is inside an album. I am currently working on that, and will update this post if I find a way.</p>

<h3>Wrapping it all up.</h3>

<p>Despite it&rsquo;s limitations Facebook has done a great job with the realtime updates and <a href="https://developers.facebook.com/docs/reference/fql/">Facebook Query Language</a>. I can&rsquo;t stress this point enough, test thoroughly. Manually and with automated testing such as Rspec. I have written tests for this and might showcase it in a later blog post. Whenever you get stuck, instead of searching StackOverflow which at times can help, the best approach I found is to use the <a href="https://developers.facebook.com/tools/explorer">Graph Explorer</a>.</p>

<p>Hope that was useful, let me know if you have any questions.</p>
]]></content>
  </entry>
  
</feed>
